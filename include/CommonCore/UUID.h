///////////////////////////////////////////////////////////////////////////////
// Copyright Deere & Company. For more information,
// please see COPYRIGHT file in root of source repository.
///////////////////////////////////////////////////////////////////////////////

#pragma once

#include <CommonCore/CommonTypes.h>
#include <boost/uuid/uuid.hpp>
#include <string>

namespace cc
{
   using UUID = boost::uuids::uuid;

   ///////////////////////////////////////////////////////////////////////////////
   //! \brief This class is used for generating uuid
   /////////////// ////////////////////////////////////////////////////////////////
   class UUIDGenerator
   {
   public:
      UUID operator()(void);
   };

   ///////////////////////////////////////////////////////////////////////////////
   //! \brief This class is used for converting uuid to string
   /////////////// ////////////////////////////////////////////////////////////////
   class UUIDToString
   {
   public:
      ///////////////////////////////////////////////////////////////////////////////
      //! \brief Converting uuid into string
      //! \param uuid
      /////////////// ////////////////////////////////////////////////////////////////
      std::string operator()(const UUID&);

      ///////////////////////////////////////////////////////////////////////////////
      //! \brief Staic method to attach uuid to topic and return in string format
      //! \param Topic
      //! \param uuid
      //! \return String of uuid attached to topic
      /////////////// ////////////////////////////////////////////////////////////////
      static std::string ToResponseTopic(const char* topic, const UUID& uuid);
   };

   class HashID
   {
       public:
          hash_t operator()(void);
   };
}
